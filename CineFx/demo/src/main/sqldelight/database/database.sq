CREATE TABLE IF NOT EXISTS UsuariosEntity(
    id INTEGER PRIMARY KEY,
    email TEXT NOT NULL,
    nombre TEXT NOT NULL,
    apellidos TEXT NOT NULL,
    tipo TEXT NOT NULL,
    contrasena TEXT NOT NULL
);

deleteAdmin:
DELETE FROM UsuariosEntity WHERE tipo == 'admin';

deleteAllUsers:
DELETE FROM UsuariosEntity;

deleteAllClientes:
DELETE FROM UsuariosEntity WHERE tipo != 'admin';

selectAllClientes:
SELECT * FROM UsuariosEntity WHERE tipo != 'admin' ORDER BY nombre ASC;

selectByEmail:
SELECT * FROM UsuariosEntity WHERE email = ?;

selectById:
SELECT * FROM UsuariosEntity WHERE id = ?;

InsertTheAdmin:
INSERT INTO UsuariosEntity ( id,email, nombre, apellidos, tipo, contrasena)
VALUES ( 1, "SomosJYRS@gmail.com", "JYRS", "Dev", "admin", "SnlScyowNTAyMDMwMw==");

insertUser:
INSERT INTO UsuariosEntity (email, nombre, apellidos, tipo, contrasena)
VALUES (?, ?, ?, ?,?);

insertUserFromJson:
INSERT INTO UsuariosEntity (id,email, nombre, apellidos, tipo, contrasena)
VALUES (?,?, ?, ?, ?,?);

selectClienteLastInserted:
SELECT * FROM UsuariosEntity WHERE id = last_insert_rowid();

updateContrasena:
UPDATE UsuariosEntity
SET contrasena = ?
WHERE email = ?;

--ButacaEntity
CREATE TABLE IF NOT EXISTS ButacaEntity(
    id TEXT PRIMARY KEY NOT NULL,
    estado TEXT NOT NULL,
    tipo TEXT NOT NULL,
    ocupacion TEXT NOT NULL ,
    precio REAL NOT NULL,
    createAt TEXT NOT NULL
);
-- Crud ButacaEntity
getAllButacaEntity:
SELECT * FROM ButacaEntity;

getByIdButacaEntity:
SELECT * FROM ButacaEntity WHERE id = ?;

getButacaByEstado:
SELECT * FROM ButacaEntity WHERE estado = ?;

getButacaByOcupacion:
SELECT * FROM ButacaEntity WHERE ocupacion = ?;

getbutacaByTipo:
SELECT * FROM ButacaEntity WHERE tipo = ?;

insertarbutaca:
INSERT INTO ButacaEntity (id,estado,tipo, ocupacion,precio,createAt) VALUES (?,?,?, ?, ?,?);

updateButacaEntity:
UPDATE ButacaEntity SET  estado=?, tipo=?, ocupacion=?, precio=? WHERE id =?;

deleteAllButacaEntity:
DELETE FROM ButacaEntity;
--ComplementoEntity
CREATE TABLE IF NOT EXISTS ComplementoEntity(
    tipo TEXT NOT NULL ,
    id TEXT PRIMARY KEY NOT NULL,
    imagen TEXT NOT NULL ,
    nombre TEXT NOT NULL,
    precio REAL NOT NULL
);
-- Crud ComplemetoEntity
getAllComplemetoEntity:
SELECT * FROM ComplementoEntity;

getByIdComplemetoEntity:
SELECT * FROM ComplementoEntity WHERE id = ?;

getComplementoByTipo:
SELECT * FROM ComplementoEntity WHERE tipo=?;

updateComplementoEntity:
UPDATE ComplementoEntity SET  nombre=?, precio=?, imagen =?, tipo=? WHERE id=?;

deleteAllComplemetoEntity:
DELETE FROM ComplementoEntity;

insertComplemento:
INSERT INTO ComplementoEntity(tipo,id, imagen, nombre,precio) VALUES(?,?, ?, ?,?);

deleteComplementoByID:
DELETE FROM ComplementoEntity WHERE id=?;

CREATE TABLE IF NOT EXISTS VentaEntity (
    id TEXT PRIMARY KEY,
    cliente_id TEXT NOT NULL REFERENCES UsuariosEntity(id),
    total REAL NOT NULL,
    created_at TEXT NOT NULL,
    updated_at TEXT NOT NULL,
    is_deleted INTEGER NOT NULL DEFAULT 0
);
-- Operaciones CRUD para la tabla de Ventas
removeAllVentas:
DELETE FROM VentaEntity;

selectAllVentas:
SELECT * FROM VentaEntity;

selectVentaById:
SELECT * FROM VentaEntity WHERE id = ?;

existsVenta:
SELECT COUNT(*) > 0 AS es_mayor_cero FROM VentaEntity WHERE id = ?;

selectAllVentasByIsDeleted:
SELECT * FROM VentaEntity WHERE is_deleted = ?;

selectVentaLastInserted:
SELECT * FROM VentaEntity WHERE id = last_insert_rowid();

insertVenta:
INSERT INTO VentaEntity (id, cliente_id, total, created_at, updated_at) VALUES (?, ?, ?, ?, ?);

updateVenta:
UPDATE VentaEntity SET cliente_id = ?, total = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteVenta:
DELETE FROM VentaEntity WHERE id = ?;

-- Tabla de Lineas de Ventas
CREATE TABLE IF NOT EXISTS LineaVentaEntityButaca (
     id TEXT PRIMARY KEY,
     venta_id TEXT NOT NULL REFERENCES VentaEntity(id),
     butaca_id TEXT NOT NULL REFERENCES ButacaEntity(id),
     cantidad INTEGER NOT NULL,
     precio REAL NOT NULL,
     created_at TEXT NOT NULL,
     updated_at TEXT NOT NULL,
     is_deleted INTEGER NOT NULL DEFAULT 0
);

-- Operaciones CRUD para la tabla de Lineas de Ventas
removeAllLineaVentaEntityButaca:
DELETE FROM LineaVentaEntityButaca;

selectAllLineaVentaEntityButaca:
SELECT * FROM LineaVentaEntityButaca;

selectLineaVentaEntityButacaById:
SELECT * FROM LineaVentaEntityButaca WHERE id = ?;

selectAllLineaVentaEntityButacaByVentaId:
SELECT * FROM LineaVentaEntityButaca WHERE venta_id = ?;

selectAllLineaVentaEntityButacaByIsDeleted:
SELECT * FROM LineaVentaEntityButaca WHERE is_deleted = ?;

selectLineaVentaEntityButacaLastInserted:
SELECT * FROM LineaVentaEntityButaca WHERE id = last_insert_rowid();

insertLineaVentaEntityButaca:
INSERT INTO LineaVentaEntityButaca (id, venta_id, butaca_id, cantidad, precio, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?,?);
updateLineaVentaEntityButaca:
UPDATE LineaVentaEntityButaca SET venta_id = ?, butaca_id = ?, cantidad = ?, precio = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteLineaVentaEntityButaca:
DELETE FROM LineaVentaEntityButaca WHERE id = ?;

-- Tabla de Lineas de Ventas
CREATE TABLE IF NOT EXISTS LineaVentaEntityComplemento(
     id TEXT PRIMARY KEY,
     venta_id TEXT NOT NULL REFERENCES VentaEntity(id),
     complemento_id TEXT NOT NULL REFERENCES ComplementoEntity(id),
     cantidad INTEGER NOT NULL,
     precio REAL NOT NULL,
     created_at TEXT NOT NULL,
     updated_at TEXT NOT NULL,
     is_deleted INTEGER NOT NULL DEFAULT 0
);

-- Operaciones CRUD para la tabla de Lineas de Ventas
removeAllLineaVentaEntityComplemento:
DELETE FROM LineaVentaEntityComplemento;

selectAllLineaVentaEntityComplemento:
SELECT * FROM LineaVentaEntityComplemento;

selectLineaVentaEntityComplementoaById:
SELECT * FROM LineaVentaEntityComplemento WHERE id = ?;

selectAllLineaVentaEntityComplementoByVentaId:
SELECT * FROM LineaVentaEntityComplemento WHERE venta_id = ?;

selectAllLineaVentaEntityComplementoByIsDeleted:
SELECT * FROM LineaVentaEntityComplemento WHERE is_deleted = ?;

selectLineaVentaEntityComplementoLastInserted:
SELECT * FROM LineaVentaEntityComplemento WHERE id = last_insert_rowid();

insertLineaVentaEntityComplemento:
INSERT INTO LineaVentaEntityComplemento (id, venta_id, complemento_id, cantidad, precio, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?,?);
updateLineaVentaEntityComplemento:
UPDATE LineaVentaEntityComplemento SET venta_id = ?, complemento_id = ?, cantidad = ?, precio = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteLineaVentaEntityComplemento:
DELETE FROM LineaVentaEntityComplemento WHERE id = ?;

selectAllLineasById:
SELECT *
FROM LineaVentaEntityButaca
WHERE venta_id = ?
UNION ALL
SELECT *
FROM LineaVentaEntityComplemento
WHERE venta_id = ?;

